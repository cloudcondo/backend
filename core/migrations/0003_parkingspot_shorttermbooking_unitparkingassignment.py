# Generated by Django 5.2.6 on 2025-09-09 20:29

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0002_unit"),
    ]

    operations = [
        migrations.CreateModel(
            name="ParkingSpot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=50)),
                ("level", models.CharField(blank=True, max_length=50)),
                ("spot_type", models.CharField(blank=True, max_length=30)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "condo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parking_spots",
                        to="core.condo",
                    ),
                ),
            ],
            options={
                "ordering": ["condo__name", "code"],
                "unique_together": {("condo", "code")},
            },
        ),
        migrations.CreateModel(
            name="ShortTermBooking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("guest_first_name", models.CharField(max_length=100)),
                ("guest_last_name", models.CharField(max_length=100)),
                ("guest_email", models.EmailField(blank=True, max_length=254)),
                ("guest_phone", models.CharField(blank=True, max_length=50)),
                (
                    "id_type",
                    models.CharField(
                        choices=[
                            ("DL", "Driver License"),
                            ("PASS", "Passport"),
                            ("NID", "National ID"),
                            ("OTHER", "Other"),
                        ],
                        default="DL",
                        max_length=10,
                    ),
                ),
                ("id_number", models.CharField(max_length=100)),
                ("id_country", models.CharField(blank=True, max_length=100)),
                ("id_province_state", models.CharField(blank=True, max_length=100)),
                ("id_city", models.CharField(blank=True, max_length=100)),
                ("check_in", models.DateTimeField()),
                ("check_out", models.DateTimeField()),
                ("num_guests", models.PositiveIntegerField(default=1)),
                ("vehicle_plate", models.CharField(blank=True, max_length=30)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("cancelled", "Cancelled"),
                            ("completed", "Completed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("created_by_email", models.EmailField(blank=True, max_length=254)),
                ("approved_by", models.CharField(blank=True, max_length=150)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "parking_spot",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.parkingspot",
                    ),
                ),
                (
                    "unit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="str_bookings",
                        to="core.unit",
                    ),
                ),
            ],
            options={
                "ordering": ["-check_in"],
            },
        ),
        migrations.CreateModel(
            name="UnitParkingAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_primary", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "parking_spot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="assignments",
                        to="core.parkingspot",
                    ),
                ),
                (
                    "unit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parking_assignments",
                        to="core.unit",
                    ),
                ),
            ],
            options={
                "ordering": ["unit__condo__name", "unit__unit_number", "-start_date"],
            },
        ),
    ]
